#/bin/bash

if [ $# -lt 1 ]; then
    echo "Missing arguments, exiting"
    echo "For help do: ./todoer -h or ./todoer --help"
    exit 1
fi

todo_pattern=TODO
todoer_help="\

    Usage: ./todoer [options]

    Options:
        -r, --repo      The name of the git repo to analyse.
        -s, --strict    If any internal data pipeline fails then exit.
        -h, --help      Print this help.
"

while (( "$#" )); do
    case $1 in
        -r | --repo)    shift; echo "using repo: $1"; repo="$1"; shift ;;
        -s | --strict)  shift; echo "running in strict mode"; strict="yep" shift ;;
        -h | --help)    shift; printf "%s\n" "$todoer_help"; exit 0 ;;
        *) break ;;
    esac
done

check_for_pipeline_error() {
    if [ "$strict" != "" ]; then
        for i in ${PIPESTATUS[*]}; do
            if [ $i != 0 ]; then
                echo "There was an error in the pipeline"
                echo "Terminating execution"
                exit 1
            fi
        done
    fi
}

prep_output() {
    xargs grep -n TODO |
    cut -d : -f 1,2 |
    sed "s/\(.*\):\(.*\)/\1,\2/g" |
    tr , '\n'
    check_for_pipeline_error
}

blame() {
    while read line1; read line2; do
        git blame --date iso $line1 -L $line2,$line2;
    done
}

get_dates() {
    sed 's/\(^.*\)\((.*....-..-..\.*)\)\(.*$\)/\2/g' |
    sed 's/.*\(....-..-..\).*/\1/g' |
    grep -v '^.*[a-zA-Z].*'
    check_for_pipeline_error
}

to_days() {
    while read date1; do
        currdate=$(date '+%s');
        d=$(date -jf "%Y-%m-%d" ${date1} '+%s');
        ddiff=`expr $currdate - $d`;
        days=`expr $ddiff / 86400`;
        echo $days;
    done
}

to_approx_years() {
    while read day1; do
        appr_yrs=$(echo "scale = 1; x = $day1 / 365; if (x < 1) print 0; x" | bc);
        echo $appr_yrs;
    done;
}

hist() {
    sort |
    uniq -c |
    sort -rn |
    awk '!max{max=$1+"";}{r="";i=s=60*$1/max;while(i-->0){r=r"#";}printf "%15s yrs %5d %s %s",$2,$1,r,"\n";}'
    check_for_pipeline_error
}

report() {
    ack -l TODO |
    prep_output |
    blame |
    get_dates |
    to_days |
    to_approx_years |
    hist
    check_for_pipeline_error
}

trap "echo Nothing to report then..." SIGINT SIGTERM
cd $1
report
